#!/usr/bin/env python

import os
import sys
import subprocess

COLOR_HEADER = '\033[95m'
COLOR_OKBLUE = '\033[94m'
COLOR_OKGREEN = '\033[92m'
COLOR_WARNING = '\033[93m'
COLOR_FAIL = '\033[91m'
COLOR_ENDC = '\033[0m'

def shell(cmd):
  subprocess.call(cmd, shell=True)
  return

def which(program):
  path = os.getenv('PATH')
  for p in path.split(os.path.pathsep):
    p = os.path.join(p, program)
    if os.path.exists(p) and os.access(p, os.X_OK):
      return p

def startCommand(params):
  qemu = which('qemu-system-x86_64')
  if None == qemu:
    print COLOR_FAIL + 'error: qemu is not installed (not found qemu-system-x86_64)'

  args = [qemu]

  args.extend([
    '-m 512',
    '-smp 1',
    '-s',
    '-kernel disk/boot/runtime',
    '-initrd disk/boot/initrd',
  ])

  if 'net' in params:
    args.extend([
      '-net nic,model=virtio,macaddr=1a:46:0b:ca:bc:7c',
      '-net user,net=192.168.76.0/24,dhcpstart=192.168.76.9,hostfwd=udp::9000-:9000,hostfwd=tcp::9000-:9000',
    ])

  if 'netdump' in params:
    args.extend([
      '-net dump,file=vm.pcap',
    ])

  if 'kvm' in params:
    args.extend([
      '-enable-kvm',
      '-no-kvm-irqchip',
    ])

  if 'curses' in params:
    args.extend([
      '-curses',
      '-serial file:serial.txt',
    ])
  else:
    args.extend([
      '-serial stdio',
    ])

  try:
    shell(' '.join(args))
  except KeyboardInterrupt:
    sys.exit(0)
  return

def buildCommand():
  shell("scons")
  return

def initrdCommand():
  shell("./mkinitrd -c disk/boot/initrd initrd")
  return

if len(sys.argv) < 2:
  print COLOR_WARNING + 'usage: runtime [command]' + COLOR_ENDC
  print ''
  print COLOR_WARNING + 'Available commands:' + COLOR_ENDC
  print COLOR_WARNING + 'start [flag [flag ...]] ' + COLOR_ENDC + '- use QEMU to run runtime.js'
  print COLOR_WARNING + '  net ' + COLOR_ENDC + '- enable network'
  print COLOR_WARNING + '  netdump ' + COLOR_ENDC + '- dump network packets into a file'
  print COLOR_WARNING + '  kvm ' + COLOR_ENDC + '- enable KVM'
  print COLOR_WARNING + '  curses ' + COLOR_ENDC + '- run without GUI'
  print COLOR_WARNING + 'build ' + COLOR_ENDC + '- run build system and make initrd image'
  print COLOR_WARNING + 'initrd ' + COLOR_ENDC + '- make initrd image'
  sys.exit(1);

command = sys.argv[1]
if 'start' == command:
  startCommand(sys.argv[2:])
elif 'build' == command:
  buildCommand()
elif 'initrd' == command:
  initrdCommand()
else:
  print COLOR_FAIL + 'error: unknown command'
  sys.exit(1)
